/* eslint-disable */

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.RecruitKeywords', null, global);
goog.exportSymbol('proto.RecruitList', null, global);
goog.exportSymbol('proto.RecruitList.RecruitPost', null, global);
goog.exportSymbol('proto.RecruitPost', null, global);
goog.exportSymbol('proto.RecruitPost.Apply', null, global);
goog.exportSymbol('proto.RecruitPost.Category', null, global);
goog.exportSymbol('proto.RecruitPost.ColorTag', null, global);
goog.exportSymbol('proto.RecruitPost.JobGroup', null, global);
goog.exportSymbol('proto.RecruitPostArray', null, global);
goog.exportSymbol('proto.ResponseRecruitMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitPost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecruitPost.repeatedFields_, null);
};
goog.inherits(proto.RecruitPost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitPost.displayName = 'proto.RecruitPost';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecruitPost.repeatedFields_ = [6,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitPost.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitPost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitPost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 15, ""),
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectpurpose: jspb.Message.getFieldWithDefault(msg, 3, ""),
    projectduring: jspb.Message.getFieldWithDefault(msg, 4, ""),
    category: jspb.Message.getFieldWithDefault(msg, 5, 0),
    colortagsList: jspb.Message.getRepeatedField(msg, 6),
    pay: jspb.Message.getFieldWithDefault(msg, 7, ""),
    startdate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    enddate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    jobgroupsList: jspb.Message.toObjectList(msg.getJobgroupsList(),
    proto.RecruitPost.JobGroup.toObject, includeInstance),
    time: jspb.Message.getFieldWithDefault(msg, 11, ""),
    apply: jspb.Message.getFieldWithDefault(msg, 12, ""),
    posterimagepath: jspb.Message.getFieldWithDefault(msg, 13, ""),
    writer: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitPost}
 */
proto.RecruitPost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitPost;
  return proto.RecruitPost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitPost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitPost}
 */
proto.RecruitPost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectpurpose(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectduring(value);
      break;
    case 5:
      var value = /** @type {!proto.RecruitPost.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 6:
      var value = /** @type {!Array.<!proto.RecruitPost.ColorTag>} */ (reader.readPackedEnum());
      msg.setColortagsList(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPay(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartdate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnddate(value);
      break;
    case 10:
      var value = new proto.RecruitPost.JobGroup;
      reader.readMessage(value,proto.RecruitPost.JobGroup.deserializeBinaryFromReader);
      msg.addJobgroups(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setApply(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterimagepath(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitPost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitPost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitPost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectpurpose();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProjectduring();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getColortagsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getPay();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStartdate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEnddate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getJobgroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.RecruitPost.JobGroup.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getApply();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPosterimagepath();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getWriter();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.RecruitPost.Category = {
  PERFORMANCE: 0,
  EDUCATION: 1,
  DESIGN: 2,
  ROBOTICS: 3,
  COMICS: 4,
  MACHINE_LEARNING: 5,
  FOOD: 6,
  ANIMATION: 7,
  STUDY: 8,
  MUSIC: 9,
  JOURNALISM: 10,
  PUBLICATION: 11,
  FASHION: 12,
  ENVIRONMENT: 13,
  INFORMATION_TECHNOLOGY: 14,
  OTHER: 15
};

/**
 * @enum {number}
 */
proto.RecruitPost.ColorTag = {
  ACTIVITY: 0,
  TECHNICAL: 1,
  ACADEMIC: 2,
  PUBLIC_INTEREST: 3,
  ARTISTIC: 4,
  MODERN: 5
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitPost.JobGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecruitPost.JobGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitPost.JobGroup.displayName = 'proto.RecruitPost.JobGroup';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitPost.JobGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitPost.JobGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitPost.JobGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.JobGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_do: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitPost.JobGroup}
 */
proto.RecruitPost.JobGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitPost.JobGroup;
  return proto.RecruitPost.JobGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitPost.JobGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitPost.JobGroup}
 */
proto.RecruitPost.JobGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitPost.JobGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitPost.JobGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitPost.JobGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.JobGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.RecruitPost.JobGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.RecruitPost.JobGroup.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string do = 2;
 * @return {string}
 */
proto.RecruitPost.JobGroup.prototype.getDo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.RecruitPost.JobGroup.prototype.setDo = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitPost.Apply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecruitPost.Apply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitPost.Apply.displayName = 'proto.RecruitPost.Apply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitPost.Apply.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitPost.Apply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitPost.Apply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.Apply.toObject = function(includeInstance, msg) {
  var f, obj = {
    applyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applier: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitPost.Apply}
 */
proto.RecruitPost.Apply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitPost.Apply;
  return proto.RecruitPost.Apply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitPost.Apply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitPost.Apply}
 */
proto.RecruitPost.Apply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitPost.Apply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitPost.Apply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitPost.Apply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPost.Apply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplier();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string apply_id = 1;
 * @return {string}
 */
proto.RecruitPost.Apply.prototype.getApplyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.RecruitPost.Apply.prototype.setApplyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string applier = 2;
 * @return {string}
 */
proto.RecruitPost.Apply.prototype.getApplier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.RecruitPost.Apply.prototype.setApplier = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 15;
 * @return {string}
 */
proto.RecruitPost.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.RecruitPost.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string projectName = 2;
 * @return {string}
 */
proto.RecruitPost.prototype.getProjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setProjectname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string projectPurpose = 3;
 * @return {string}
 */
proto.RecruitPost.prototype.getProjectpurpose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setProjectpurpose = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string projectDuring = 4;
 * @return {string}
 */
proto.RecruitPost.prototype.getProjectduring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setProjectduring = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Category category = 5;
 * @return {!proto.RecruitPost.Category}
 */
proto.RecruitPost.prototype.getCategory = function() {
  return /** @type {!proto.RecruitPost.Category} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.RecruitPost.Category} value */
proto.RecruitPost.prototype.setCategory = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated ColorTag colorTags = 6;
 * @return {!Array.<!proto.RecruitPost.ColorTag>}
 */
proto.RecruitPost.prototype.getColortagsList = function() {
  return /** @type {!Array.<!proto.RecruitPost.ColorTag>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<!proto.RecruitPost.ColorTag>} value */
proto.RecruitPost.prototype.setColortagsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.RecruitPost.ColorTag} value
 * @param {number=} opt_index
 */
proto.RecruitPost.prototype.addColortags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.RecruitPost.prototype.clearColortagsList = function() {
  this.setColortagsList([]);
};


/**
 * optional string pay = 7;
 * @return {string}
 */
proto.RecruitPost.prototype.getPay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setPay = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string startDate = 8;
 * @return {string}
 */
proto.RecruitPost.prototype.getStartdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setStartdate = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string endDate = 9;
 * @return {string}
 */
proto.RecruitPost.prototype.getEnddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setEnddate = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated JobGroup jobGroups = 10;
 * @return {!Array.<!proto.RecruitPost.JobGroup>}
 */
proto.RecruitPost.prototype.getJobgroupsList = function() {
  return /** @type{!Array.<!proto.RecruitPost.JobGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecruitPost.JobGroup, 10));
};


/** @param {!Array.<!proto.RecruitPost.JobGroup>} value */
proto.RecruitPost.prototype.setJobgroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.RecruitPost.JobGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RecruitPost.JobGroup}
 */
proto.RecruitPost.prototype.addJobgroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.RecruitPost.JobGroup, opt_index);
};


proto.RecruitPost.prototype.clearJobgroupsList = function() {
  this.setJobgroupsList([]);
};


/**
 * optional string time = 11;
 * @return {string}
 */
proto.RecruitPost.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setTime = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string apply = 12;
 * @return {string}
 */
proto.RecruitPost.prototype.getApply = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setApply = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string posterImagePath = 13;
 * @return {string}
 */
proto.RecruitPost.prototype.getPosterimagepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setPosterimagepath = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string writer = 14;
 * @return {string}
 */
proto.RecruitPost.prototype.getWriter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.RecruitPost.prototype.setWriter = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitPostArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecruitPostArray.repeatedFields_, null);
};
goog.inherits(proto.RecruitPostArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitPostArray.displayName = 'proto.RecruitPostArray';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecruitPostArray.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitPostArray.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitPostArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitPostArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPostArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    recruitpostarrayList: jspb.Message.toObjectList(msg.getRecruitpostarrayList(),
    proto.RecruitPost.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitPostArray}
 */
proto.RecruitPostArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitPostArray;
  return proto.RecruitPostArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitPostArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitPostArray}
 */
proto.RecruitPostArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecruitPost;
      reader.readMessage(value,proto.RecruitPost.deserializeBinaryFromReader);
      msg.addRecruitpostarray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitPostArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitPostArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitPostArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitPostArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecruitpostarrayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecruitPost.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RecruitPost recruitPostArray = 1;
 * @return {!Array.<!proto.RecruitPost>}
 */
proto.RecruitPostArray.prototype.getRecruitpostarrayList = function() {
  return /** @type{!Array.<!proto.RecruitPost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecruitPost, 1));
};


/** @param {!Array.<!proto.RecruitPost>} value */
proto.RecruitPostArray.prototype.setRecruitpostarrayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.RecruitPost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RecruitPost}
 */
proto.RecruitPostArray.prototype.addRecruitpostarray = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.RecruitPost, opt_index);
};


proto.RecruitPostArray.prototype.clearRecruitpostarrayList = function() {
  this.setRecruitpostarrayList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitKeywords = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecruitKeywords.repeatedFields_, null);
};
goog.inherits(proto.RecruitKeywords, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitKeywords.displayName = 'proto.RecruitKeywords';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecruitKeywords.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitKeywords.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitKeywords.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitKeywords} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitKeywords.toObject = function(includeInstance, msg) {
  var f, obj = {
    recruitkeywordsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitKeywords}
 */
proto.RecruitKeywords.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitKeywords;
  return proto.RecruitKeywords.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitKeywords} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitKeywords}
 */
proto.RecruitKeywords.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecruitkeywords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitKeywords.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitKeywords.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitKeywords} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitKeywords.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecruitkeywordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string recruitKeywords = 1;
 * @return {!Array.<string>}
 */
proto.RecruitKeywords.prototype.getRecruitkeywordsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.RecruitKeywords.prototype.setRecruitkeywordsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.RecruitKeywords.prototype.addRecruitkeywords = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.RecruitKeywords.prototype.clearRecruitkeywordsList = function() {
  this.setRecruitkeywordsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RecruitList.repeatedFields_, null);
};
goog.inherits(proto.RecruitList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitList.displayName = 'proto.RecruitList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RecruitList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitList.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitList.toObject = function(includeInstance, msg) {
  var f, obj = {
    recruitlistList: jspb.Message.toObjectList(msg.getRecruitlistList(),
    proto.RecruitList.RecruitPost.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitList}
 */
proto.RecruitList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitList;
  return proto.RecruitList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitList}
 */
proto.RecruitList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RecruitList.RecruitPost;
      reader.readMessage(value,proto.RecruitList.RecruitPost.deserializeBinaryFromReader);
      msg.addRecruitlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecruitlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.RecruitList.RecruitPost.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RecruitList.RecruitPost = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RecruitList.RecruitPost, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RecruitList.RecruitPost.displayName = 'proto.RecruitList.RecruitPost';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RecruitList.RecruitPost.prototype.toObject = function(opt_includeInstance) {
  return proto.RecruitList.RecruitPost.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RecruitList.RecruitPost} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitList.RecruitPost.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    posterimagepath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RecruitList.RecruitPost}
 */
proto.RecruitList.RecruitPost.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RecruitList.RecruitPost;
  return proto.RecruitList.RecruitPost.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RecruitList.RecruitPost} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RecruitList.RecruitPost}
 */
proto.RecruitList.RecruitPost.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterimagepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RecruitList.RecruitPost.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RecruitList.RecruitPost.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RecruitList.RecruitPost} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RecruitList.RecruitPost.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosterimagepath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.RecruitList.RecruitPost.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.RecruitList.RecruitPost.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string projectName = 2;
 * @return {string}
 */
proto.RecruitList.RecruitPost.prototype.getProjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.RecruitList.RecruitPost.prototype.setProjectname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string posterImagePath = 3;
 * @return {string}
 */
proto.RecruitList.RecruitPost.prototype.getPosterimagepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.RecruitList.RecruitPost.prototype.setPosterimagepath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated RecruitPost recruitList = 1;
 * @return {!Array.<!proto.RecruitList.RecruitPost>}
 */
proto.RecruitList.prototype.getRecruitlistList = function() {
  return /** @type{!Array.<!proto.RecruitList.RecruitPost>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.RecruitList.RecruitPost, 1));
};


/** @param {!Array.<!proto.RecruitList.RecruitPost>} value */
proto.RecruitList.prototype.setRecruitlistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.RecruitList.RecruitPost=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RecruitList.RecruitPost}
 */
proto.RecruitList.prototype.addRecruitlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.RecruitList.RecruitPost, opt_index);
};


proto.RecruitList.prototype.clearRecruitlistList = function() {
  this.setRecruitlistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ResponseRecruitMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ResponseRecruitMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ResponseRecruitMessage.displayName = 'proto.ResponseRecruitMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ResponseRecruitMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.ResponseRecruitMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ResponseRecruitMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResponseRecruitMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ResponseRecruitMessage}
 */
proto.ResponseRecruitMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ResponseRecruitMessage;
  return proto.ResponseRecruitMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ResponseRecruitMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ResponseRecruitMessage}
 */
proto.ResponseRecruitMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ResponseRecruitMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ResponseRecruitMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ResponseRecruitMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ResponseRecruitMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ResponseRecruitMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ResponseRecruitMessage.prototype.setIssuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.ResponseRecruitMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ResponseRecruitMessage.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 3;
 * @return {string}
 */
proto.ResponseRecruitMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ResponseRecruitMessage.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto);
